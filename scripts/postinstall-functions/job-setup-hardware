#!/bin/bash

job_setup_hardware()
{

	msg_job_start "job_setup_hardware"

	mount -v -t proc none ${mountpoint}/proc 
	mount -v -t sysfs none ${mountpoint}/sys 
	mount -v -o bind /dev ${mountpoint}/dev 

	# remove any db.lck
	chroot ${mountpoint} /bin/rm -f /var/lib/pacman/db.lck
	
	# setup alsa volume levels
	msg "setup alsa config"
	if [ -e "/etc/asound.state" ] ; then
		cp -v -a -f /etc/asound.state ${mountpoint}/etc/asound.state
	fi

	# alsa blacklist for the pc speaker
	if [ -e "/etc/modprobe.d/alsa_blacklist.conf" ] ; then
		cp -v -a -f /etc/modprobe.d/alsa_blacklist.conf ${mountpoint}/etc/modprobe.d/alsa_blacklist.conf
	fi

	# blacklist for broken realtek nics
	if [ -e "/etc/modprobe.d/realtek_blacklist.conf" ] ; then
		cp -v -a -f /etc/modprobe.d/realtek_blacklist.conf ${mountpoint}/etc/modprobe.d/realtek_blacklist.conf
	fi

	# setup proprietary drivers, if detected
	msg "setup proprietary drivers"
	if [ -e "/tmp/nvidia" ] ; then
		msg "nvidia detected"

		msg "removing unneeded packages"
		chroot ${mountpoint} /usr/bin/pacman -Rdd libgl --noconfirm
		chroot ${mountpoint} /usr/bin/pacman -Rdd nouveau-dri --noconfirm
		chroot ${mountpoint} /usr/bin/pacman -Rdd xf86-nv --noconfirm
		chroot ${mountpoint} /usr/bin/pacman -Rdd xf86-nouveau --noconfirm
		msg "installing driver"
		pacman -r ${mountpoint} -Udf ${PKG_OVERLAY}/nvidia-utils-${NVIDIA_DRV_VER}* --noconfirm
		pacman -r ${mountpoint} -Udf ${PKG_OVERLAY}/nvidia*${NVIDIA_DRV_VER}* --noconfirm

		# load the modules array from rc.conf
		msg "loading current modules from rc.conf"
		RCCONF_MODULES=`cat ${mountpoint}/etc/rc.conf | grep "MODULES=" | cut -d "(" -f 2 | cut -d ")" -f 1`

		# add the detected modules to the original modules array
		msg "adding nvidia module to modules array"
		NEW_RCCONF_MODULES=`echo "MODULES=($RCCONF_MODULES nvidia)" | sed 's/  / /g'`

		# and put that into rc.conf
		msg "writing new rc.conf"
		sed -i -e "s,MODULES=.*,$NEW_RCCONF_MODULES,g" ${mountpoint}/etc/rc.conf

		unset RCCONF_MODULES
		unset NEW_RCCONF_MODULES

	elif [ -e "/tmp/nvidia-173xx" ] ; then
		msg "nvidia-173xx detected"

		msg "removing unneeded packages"
		chroot ${mountpoint} /usr/bin/pacman -Rdd libgl --noconfirm
		chroot ${mountpoint} /usr/bin/pacman -Rdd nouveau-dri --noconfirm
		chroot ${mountpoint} /usr/bin/pacman -Rdd xf86-nv --noconfirm
		chroot ${mountpoint} /usr/bin/pacman -Rdd xf86-nouveau --noconfirm
		msg "installing driver"
		pacman -r ${mountpoint} -Udf ${PKG_OVERLAY}/nvidia-173xx* --noconfirm

		# load the modules array from rc.conf
		msg "loading current modules from rc.conf"
		RCCONF_MODULES=`cat ${mountpoint}/etc/rc.conf | grep "MODULES=" | cut -d "(" -f 2 | cut -d ")" -f 1`

		# add the detected modules to the original modules array
		msg "adding nvidia module to modules array"
		NEW_RCCONF_MODULES=`echo "MODULES=($RCCONF_MODULES nvidia)" | sed 's/  / /g'`

		# and put that into rc.conf
		msg "writing new rc.conf"
		sed -i -e "s,MODULES=.*,$NEW_RCCONF_MODULES,g" ${mountpoint}/etc/rc.conf

		unset RCCONF_MODULES
		unset NEW_RCCONF_MODULES

	elif [ -e "/tmp/nvidia-96xx" ] ; then
		msg "nvidia-96xx detected"

		msg "removing unneeded packages"
		chroot ${mountpoint} /usr/bin/pacman -Rdd libgl --noconfirm
		chroot ${mountpoint} /usr/bin/pacman -Rdd nouveau-dri --noconfirm
		chroot ${mountpoint} /usr/bin/pacman -Rdd xf86-nv --noconfirm
		chroot ${mountpoint} /usr/bin/pacman -Rdd xf86-nouveau --noconfirm
		msg "installing driver" 
		pacman -r ${mountpoint} -Udf ${PKG_OVERLAY}/nvidia-96xx* --noconfirm

		# load the modules array from rc.conf
		msg "loading current modules from rc.conf"
		RCCONF_MODULES=`cat ${mountpoint}/etc/rc.conf | grep "MODULES=" | cut -d "(" -f 2 | cut -d ")" -f 1`

		# add the detected modules to the original modules array
		msg "adding nvidia module to modules array"
		NEW_RCCONF_MODULES=`echo "MODULES=($RCCONF_MODULES nvidia)" | sed 's/  / /g'`

		# and put that into rc.conf
		msg "writing new rc.conf"
		sed -i -e "s,MODULES=.*,$NEW_RCCONF_MODULES,g" ${mountpoint}/etc/rc.conf

		unset RCCONF_MODULES
		unset NEW_RCCONF_MODULES

	elif [ -e "/tmp/catalyst" ] ; then
		msg "catalyst detected" 

		msg "removing unneeded packages"
		# remove conflicting packages
		chroot ${mountpoint} /usr/bin/pacman -Rdd ati-dri --noconfirm
		chroot ${mountpoint} /usr/bin/pacman -Rdd xf86-video-ati --noconfirm
		chroot ${mountpoint} /usr/bin/pacman -Rdd xf86-video-radeonhd --noconfirm

		msg "installing driver"
		# install driver
		pacman -r ${mountpoint} -Udf ${PKG_OVERLAY}/catalyst* --noconfirm

		# load the modules array from rc.conf
		msg "loading current modules from rc.conf"
		RCCONF_MODULES=`cat ${mountpoint}/etc/rc.conf | grep "MODULES=" | cut -d "(" -f 2 | cut -d ")" -f 1`

		# add the detected modules to the original modules array
		msg "adding catalyst fglrx module to modules array"
		NEW_RCCONF_MODULES=`echo "MODULES=($RCCONF_MODULES fglrx)" | sed 's/  / /g'`

		# and put that into rc.conf
		msg "writing new rc.conf"
		sed -i -e "s,MODULES=.*,$NEW_RCCONF_MODULES,g" ${mountpoint}/etc/rc.conf

		unset RCCONF_MODULES
		unset NEW_RCCONF_MODULES
	fi

	# load the modules array from rc.conf
	msg "loading current modules from rc.conf"
	RCCONF_MODULES=`cat ${mountpoint}/etc/rc.conf | grep "MODULES=" | cut -d "(" -f 2 | cut -d ")" -f 1`

	# Check for detected modules:
	msg "Check for detected modules"
	DETECTED_MODULES=`hwdetect --modules | cut -d "(" -f 2 | cut -d ")" -f 1`

	# Check for not loaded modules:
	msg "Check for not loaded modules"
	NOT_LOADED_MODULES=`hwdetect --modules-not-loaded | cut -d "(" -f 2 | cut -d ")" -f 1`

	# put the not loaded modules into a temporary file
	if [ -e "/tmp/not_loaded_modules" ] ; then
		rm -rf /tmp/not_loaded_modules >/dev/null 2>&1
	fi
	echo $NOT_LOADED_MODULES > /tmp/not_loaded_modules

	msg "detected modules = $DETECTED_MODULES"
	msg "not loaded modules = $NOT_LOADED_DRIVERS"

	# now compare the detected stuff with the not loaded stuff and put all mismatches into $NEW_RCCONF_MODULES
	echo "detecting loaded modules"
	for module in ${DETECTED_MODULES}; do
	if [ "$(grep -v ${module} /tmp/not_loaded_modules)" ]; then
		NEW_RCCONF_MODULES="$NEW_RCCONF_MODULES $module"
	fi
	done

	# and put that into rc.conf
	msg "writing new rc.conf"
	sed -i -e "s,MODULES=.*,`echo "MODULES=($RCCONF_MODULES $NEW_RCCONF_MODULES)" | sed 's/  / /g'`,g" ${mountpoint}/etc/rc.conf

	unset DETECTED_MODULES
	unset NOT_LOADED_MODULES
	unset RCCONF_MODULES
	unset NEW_RCCONF_MODULES

	# check if /opt/chakra/hooks has detected powersaving capabilities and loaded some modules.
	# if thats the case, we add them to rc.conf too
	#
	# at first, collect some data
	msg "adding powersave modules to MODULES array in rc.conf"
	msg "collecting data"
	KERNEL=$(cat /proc/version | cut -d " " -f 3)
	AVAILABLE_CPU_DRIVERS=`pushd /lib/modules/"$KERNEL"/kernel/arch/x86/kernel/cpu/cpufreq/ >/dev/null 2>&1; ls -1 *.ko* | cut -d "." -f 1 | sed 's/-/_/g'; popd >/dev/null 2>&1`
	AVAILABLE_GOVERNORS=`pushd /lib/modules/"$KERNEL"/kernel/drivers/cpufreq/ >/dev/null 2>&1; ls -1 *.ko* | cut -d "." -f 1 | sed 's/-/_/g'; popd >/dev/null 2>&1`

	# put all available drivers/governors and loaded modules into some variables
	DETECTED_MODULES=`lsmod | awk '{print $1}' | grep -v Module`
	AVAILABLE_DRIVERS="$AVAILABLE_CPU_DRIVERS $AVAILABLE_GOVERNORS"

	msg "kernel = $KERNEL"
	msg "loaded powersave modules = $DETECTED_MODULES"
	msg "available powersave modules = $AVAILABLE_DRIVERS"

	# put the available drivers/governors into a temporary file
	if [ -e "/tmp/cpu_drivers" ] ; then
		rm -rf /tmp/cpu_drivers >/dev/null 2>&1
	fi
	echo $AVAILABLE_DRIVERS > /tmp/cpu_drivers

	# initialize var for detected drivers
	DETECTED_DRIVERS=''

	# now compare the available stuff with the loaded stuff and put all matches into $DETECTED DRIVERS
	msg "detecting loaded modules"
	for module in ${DETECTED_MODULES}; do
		if [ "$(grep ${module} /tmp/cpu_drivers)" ]; then
			DETECTED_DRIVERS="$DETECTED_DRIVERS $module"
		fi
	done

	# load the modules array from rc.conf
	msg "loading current modules from rc.conf"
	RCCONF_MODULES=`cat ${mountpoint}/etc/rc.conf | grep "MODULES=" | cut -d "(" -f 2 | cut -d ")" -f 1`

	# add the detected modules to the original modules array
	msg "adding detected powersave modules to modules array: $DETECTED_DRIVERS"
	NEW_RCCONF_MODULES=`echo "MODULES=($RCCONF_MODULES $DETECTED_DRIVERS)" | sed 's/  / /g'`

	# and put that into rc.conf
	msg "writing new rc.conf"
	sed -i -e "s,MODULES=.*,$NEW_RCCONF_MODULES,g" ${mountpoint}/etc/rc.conf

	unset RCCONF_MODULES
	unset NEW_RCCONF_MODULES

	# fixing alsa
	alsactl -f ${mountpoint}/var/lib/alsa/asound.state store
	
	msg "umounting /proc, /sys and /dev"
	umount -v ${mountpoint}/proc ${mountpoint}/sys ${mountpoint}/dev 

	msg_job_done
}
